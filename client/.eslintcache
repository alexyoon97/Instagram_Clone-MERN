[{"D:\\Files\\mern_instagram_clone\\client\\src\\index.js":"1","D:\\Files\\mern_instagram_clone\\client\\src\\reportWebVitals.js":"2","D:\\Files\\mern_instagram_clone\\client\\src\\App.js":"3","D:\\Files\\mern_instagram_clone\\client\\src\\component\\screen\\CreatePost.js":"4","D:\\Files\\mern_instagram_clone\\client\\src\\component\\Navbar.js":"5","D:\\Files\\mern_instagram_clone\\client\\src\\component\\screen\\Signup.js":"6","D:\\Files\\mern_instagram_clone\\client\\src\\component\\screen\\Home.js":"7","D:\\Files\\mern_instagram_clone\\client\\src\\component\\screen\\Profile.js":"8","D:\\Files\\mern_instagram_clone\\client\\src\\component\\screen\\Signin.js":"9","D:\\Files\\mern_instagram_clone\\client\\src\\component\\screen\\UserProfile.js":"10","D:\\Files\\mern_instagram_clone\\client\\src\\component\\screen\\FollowPost.js":"11","D:\\Files\\mern_instagram_clone\\client\\src\\reducers\\userReducer.js":"12","D:\\Files\\mern_instagram_clone\\client\\src\\component\\Search_button.js":"13"},{"size":478,"mtime":1608361963988,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1955,"mtime":1608696741087,"results":"17","hashOfConfig":"15"},{"size":3319,"mtime":1608430373467,"results":"18","hashOfConfig":"15"},{"size":1837,"mtime":1618971081358,"results":"19","hashOfConfig":"15"},{"size":2106,"mtime":1608698766664,"results":"20","hashOfConfig":"15"},{"size":6556,"mtime":1608697919364,"results":"21","hashOfConfig":"15"},{"size":4718,"mtime":1608708433422,"results":"22","hashOfConfig":"15"},{"size":2414,"mtime":1608635407564,"results":"23","hashOfConfig":"15"},{"size":5199,"mtime":1608700679782,"results":"24","hashOfConfig":"15"},{"size":6684,"mtime":1608697926713,"results":"25","hashOfConfig":"15"},{"size":589,"mtime":1608708432913,"results":"26","hashOfConfig":"15"},{"size":1391,"mtime":1619055858499,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"i05hxh",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"30"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Files\\mern_instagram_clone\\client\\src\\index.js",[],["65","66"],"D:\\Files\\mern_instagram_clone\\client\\src\\reportWebVitals.js",[],"D:\\Files\\mern_instagram_clone\\client\\src\\App.js",["67","68"],"import \"./App.css\";\nimport React, { useEffect, createContext, useReducer, useContext } from \"react\";\nimport NavBar from \"./component/Navbar\";\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\nimport Home from \"./component/screen/Home\";\nimport SignIn from \"./component/screen/Signin\";\nimport Profile from \"./component/screen/Profile\";\nimport Signup from \"./component/screen/Signup\";\nimport CreatePost from \"./component/screen/CreatePost\";\nimport { reducer, initialState } from \"./reducers/userReducer\";\nimport UserProfile from './component/screen/UserProfile'\nimport FollowPost from './component/screen/FollowPost'\n\n//global state\nexport const userContext = createContext();\n\n//since we can not create useHistory componenet, create a function that includes switch so we can use useHistory()\nconst Routing = () => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(userContext);\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user) {\n      dispatch({ type: \"USER\", payload: user });\n    } else {\n      history.push(\"/signin\");\n    }\n  }, []);\n\n  return (\n    <Switch>\n      <Route path=\"/explore\">\n        <Home />\n      </Route>\n      <Route path=\"/signin\">\n        <SignIn />\n      </Route>\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n      <Route path=\"/profile\" exact={true}>\n        <Profile />\n      </Route>\n      <Route path=\"/createpost\">\n        <CreatePost />\n      </Route>\n      <Route path=\"/profile/:userid\">\n        <UserProfile />\n      </Route>\n      <Route path=\"/\" exact={true}>\n        <FollowPost />\n      </Route>\n    </Switch>\n  );\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <userContext.Provider value={{ state, dispatch }}>\n      <BrowserRouter>\n        <NavBar />\n        <Routing />\n      </BrowserRouter>\n    </userContext.Provider>\n  );\n}\n\nexport default App;\n","D:\\Files\\mern_instagram_clone\\client\\src\\component\\screen\\CreatePost.js",["69"],"import React, { useState, useEffect } from \"react\";\r\nimport M from \"materialize-css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst CreatePost = () => {\r\n  const history = useHistory();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n\r\n  //after change the url value we send req to server\r\n  useEffect(() => {\r\n    if(url){\r\n      fetch(\"/createpost\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        },\r\n        body: JSON.stringify({\r\n          title,\r\n          body,\r\n          pic: url,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          if (data.error) {\r\n            M.toast({ html: data.error, classes: \"#b71c1c red darken-4\" });\r\n          } else {\r\n            M.toast({\r\n              html: \"Successfully posted\",\r\n              classes: \"black-text #eeeeee grey lighten-3\",\r\n            });\r\n            history.push(\"/\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    \r\n  }, [url]); //when url chnages useEffect will run\r\n\r\n  //to send file to server use new FormData\r\n  //search upload file in link down below\r\n  //https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\r\n\r\n  const postDetails = () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", image);\r\n    data.append(\"upload_preset\", \"instagram-clone\"); // second parameter is cloudnairy\r\n    data.append(\"cloud_name\", \"alexyoon\"); //my cloudnairy name\r\n    fetch(\"https://api.cloudinary.com/v1_1/alexyoon/image/upload\", {\r\n      //append image/upload in order to post the data to store image in cloud\r\n      method: \"post\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setUrl(data.url);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card input-field\"\r\n      style={{\r\n        margin: \"30px auto\",\r\n        maxWidth: \"500px\",\r\n        padding: \"20px\",\r\n        textAlign: \"center\",\r\n      }}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"title\"\r\n        value={title}\r\n        onChange={(e) => {\r\n          setTitle(e.target.value);\r\n        }}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"body\"\r\n        value={body}\r\n        onChange={(e) => {\r\n          setBody(e.target.value);\r\n        }}\r\n      />\r\n\r\n      <div className=\"file-field input-field\">\r\n        <div className=\"btn #1976d2 blue darken-1\">\r\n          <span>Upload Image</span>\r\n          <input\r\n            type=\"file\"\r\n            onChange={(e) => {\r\n              setImage(e.target.files[0]);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"file-path-wrapper\">\r\n          <input className=\"file-path validate\" type=\"text\" />\r\n        </div>\r\n      </div>\r\n      <button\r\n        className=\"btn waves-effect waves-light #1976d2 blue darken-1\"\r\n        onClick={() => postDetails()}\r\n      >\r\n        Post\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","D:\\Files\\mern_instagram_clone\\client\\src\\component\\Navbar.js",["70","71","72","73","74","75","76"],"import React, { useContext, useRef, useEffect, useState } from \"react\";\r\nimport { userContext } from \"../App\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\nimport { JsonWebTokenError } from \"jsonwebtoken\";\r\nimport Search_button from \"./Search_button\";\r\n\r\nconst NavBar = () => {\r\n  const { state, dispatch } = useContext(userContext);\r\n  const [userDetails, setUserDetails] = useState([]);\r\n  const history = useHistory();\r\n\r\n\r\n  const renderList = () => {\r\n    //show different links depends on logged in or logged out\r\n    if (state) {\r\n      return [\r\n        <li key=\"1\">\r\n          <Search_button />\r\n        </li>,\r\n        <li key=\"2\">\r\n          <Link to=\"/profile\">Profile</Link>\r\n        </li>,\r\n        <li key=\"3\">\r\n          <Link to=\"/createpost\">Upload Post</Link>\r\n        </li>,\r\n        <li key=\"4\">\r\n          <Link to=\"/explore\">Explore</Link>\r\n        </li>,\r\n        <li key=\"5\">\r\n          <button\r\n            className=\"btn waves-effect waves-light #e91e63 pink\"\r\n            onClick={() => {\r\n              localStorage.clear();\r\n              dispatch({ type: \"CLEAR\" });\r\n              history.push(\"/signin\");\r\n            }}\r\n          >\r\n            Logout\r\n          </button>\r\n        </li>,\r\n      ];\r\n    } else {\r\n      return [\r\n        <li>\r\n          <Link to=\"/signin\">Sign in</Link>\r\n        </li>,\r\n        <li>\r\n          <Link to=\"/signup\">Sign up</Link>\r\n        </li>,\r\n      ];\r\n    }\r\n  };\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper white\" style={{ color: \"black\" }}>\r\n        <Link to={state ? \"/\" : \"/signin\"} className=\"brand-logo left\">\r\n          Instagram\r\n        </Link>\r\n        <ul id=\"nav-mobile\" className=\"right\">\r\n          {renderList()}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","D:\\Files\\mern_instagram_clone\\client\\src\\component\\screen\\Signup.js",["77","78"],"import React,{useState} from \"react\";\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst SignUp = () => {\r\n    const history = useHistory()\r\n\r\n    const [name,setName] = useState(\"\")\r\n    const [password,setPassword] = useState(\"\")\r\n    const [email,setEmail] = useState(\"\")\r\n    \r\n    const postData = () =>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n            .test(email)){\r\n                M.toast({html: \"Invalid Email\", classes:\"#b71c1c red darken-4\"})\r\n                return\r\n            }\r\n        fetch('/signup',{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\" : \"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                name,\r\n                email,\r\n                password\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            if(data.error){\r\n                M.toast({html: data.error, classes:\"#b71c1c red darken-4\"})\r\n            }\r\n            else{\r\n                M.toast({html: data.message, classes: \"black-text #eeeeee grey lighten-3\"})\r\n                history.push('/signin')\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n  return (\r\n    <div className=\"myCard\">\r\n      <div className=\"card auth-card input-field\">\r\n        <h2>Instagram</h2>\r\n        <input type=\"text\" placeholder=\"name\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n        <input type=\"text\" placeholder=\"email\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n        <input type=\"password\" placeholder=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n        <button className=\"btn waves-effect waves-light #1976d2 blue darken-1\" onClick={()=>postData()}>Sign up</button>\r\n        <h5>\r\n            <Link to=\"/signin\">Already have account?</Link>\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","D:\\Files\\mern_instagram_clone\\client\\src\\component\\screen\\Home.js",["79","80","81","82","83"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { userContext } from \"../../App\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const { state, dispatch } = useContext(userContext);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/allpost\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((results) => {\r\n        console.log(results);\r\n        setData(results.posts);\r\n      });\r\n  }, []);\r\n\r\n  const likePost = (id) => {\r\n    fetch(\"/like\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const unlikePost = (id) => {\r\n    fetch(\"/unlike\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const makeComment = (text, postId) => {\r\n    fetch(\"/comment\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId,\r\n        text,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      });\r\n  };\r\n\r\n  const deletePost = (postId) => {\r\n    fetch(`/deletepost/${postId}`, {\r\n      method: \"delete\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        const newData = data.filter((item) => {\r\n          return item._id !== result._id;\r\n        });\r\n        setData(newData);\r\n      });\r\n  };\r\n  const deleteComment = (commentId,postId) => {\r\n    fetch(`/deletecomment/${commentId}/${postId}`, {\r\n      method: \"delete\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {data.map((item) => {\r\n        return (\r\n          <div key={item._id} className=\"card home-card\">\r\n            <h5>\r\n              <Link to={item.postedBy._id !== state._id ? '/profile/' + item.postedBy._id : '/profile'} style={{padding:\"5px\"}}> {item.postedBy.name} </Link>\r\n              \r\n              {item.postedBy._id === state._id && (\r\n                <i\r\n                  key={item.postedBy._id}\r\n                  className=\"material-icons\"\r\n                  style={{ float: \"right\", cursor: \"pointer\" }}\r\n                  onClick={() => deletePost(item._id)}\r\n                >\r\n                  delete\r\n                </i>\r\n              )}\r\n            </h5>\r\n            <div className=\"card-image\">\r\n              <img alt=\"\" src={item.photo} />\r\n            </div>\r\n            <div className=\"card-content\">\r\n              {item.likes.includes(state._id) ? (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  onClick={() => {\r\n                    unlikePost(item._id);\r\n                  }}\r\n                  style={{\r\n                    color: item.likes.length > 0 ? \"red\" : \"grey\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  favorite\r\n                </i>\r\n              ) : (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  onClick={() => {\r\n                    likePost(item._id);\r\n                  }}\r\n                  style={{\r\n                    color: item.likes.length > 0 ? \"red\" : \"grey\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  favorite\r\n                </i>\r\n              )}\r\n\r\n              <span>{item.likes.length} Likes</span>\r\n              <h6>{item.title}</h6>\r\n              <p>{item.body}</p>\r\n              {item.comments.map((record) => {\r\n                return (\r\n                  <h6 key={record._id}>\r\n                    <span style={{ fontWeight: \"500\" }}>\r\n                      {record.postedBy.name}\r\n                    </span>\r\n                    {record.text}\r\n                    {record.postedBy._id === state._id && (\r\n                      <i\r\n                        key={record.postedBy._id}\r\n                        className=\"material-icons\"\r\n                        style={{ float: \"right\", cursor: \"pointer\" }}\r\n                        onClick={() => deleteComment(record._id,item._id)}\r\n                      >\r\n                        delete\r\n                      </i>\r\n                    )}\r\n                  </h6>\r\n                );\r\n              })}\r\n              <form\r\n                onSubmit={(e) => {\r\n                  e.preventDefault(); //prevent refreshing\r\n                  makeComment(e.target[0].value, item._id); //access first input element\r\n                }}\r\n              >\r\n                <input type=\"text\" placeholder=\"add a comment\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\Files\\mern_instagram_clone\\client\\src\\component\\screen\\Profile.js",["84","85"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { userContext } from \"../../App\";\r\nimport M from \"materialize-css\";\r\n\r\nconst Profile = () => {\r\n  const [myPics, setMyPics] = useState([]);\r\n  const { state, dispatch } = useContext(userContext);\r\n  const [image, setImage] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"/mypost\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((results) => {\r\n        setMyPics(results.mypost);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    if (url) {\r\n      fetch(\"/userprofilepic\", {\r\n        method: \"put\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        },\r\n        body: JSON.stringify({\r\n          pic: url,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (data.error) {\r\n            console.log(data.error);\r\n            M.toast({\r\n              html: \"Failed to upload the picture\",\r\n              classes: \"#b71c1c red darken-4\",\r\n            });\r\n          } else {\r\n            M.toast({\r\n              html: \"Successfully update the profile picture\",\r\n              classes: \"black-text #eeeeee grey lighten-3\",\r\n            });\r\n            dispatch({\r\n              type: \"UPDATE_PROFILE_PIC\",\r\n              payload: { userProfilePic: url },\r\n            });\r\n            localStorage.setItem(\"user\", JSON.stringify(state));\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, [url]); //when url chnages useEffect will\r\n\r\n  useEffect(() => {\r\n    uploadProfilePic();\r\n  }, [image]);\r\n\r\n  const uploadProfilePic = () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", image);\r\n    data.append(\"upload_preset\", \"instagram-clone\"); // second parameter is cloudnairy\r\n    data.append(\"cloud_name\", \"alexyoon\"); //my cloudnairy name\r\n    fetch(\"https://api.cloudinary.com/v1_1/alexyoon/image/upload\", {\r\n      //append image/upload in order to post the data to store the image in cloud\r\n      method: \"post\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setUrl(data.url);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        M.toast({\r\n          html: \"Failed to upload the image\",\r\n          classes: \"#b71c1c red darken-4\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {state ? (\r\n        <div style={{ maxWidth: \"550px\", margin: \"0px auto\" }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-evenly\",\r\n              margin: \"18px 0px\",\r\n              borderBottom: \"1px solid grey\",\r\n            }}\r\n          >\r\n            <div>\r\n              {console.log(state.userProfilePic)}\r\n              <img\r\n                style={{\r\n                  width: \"160px\",\r\n                  height: \"160px\",\r\n                  borderRadius: \"80px\",\r\n                }}\r\n                alt=\"\"\r\n                src={state ? state.userProfilePic : \"\"}\r\n              />\r\n            </div>\r\n            <div>\r\n              <h4>{state ? state.name : \"-\"}</h4>\r\n              <h5>{state ? state.email : \"loading\"}</h5>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  width: \"108%\",\r\n                }}\r\n              >\r\n                <h6>{myPics.length} posts</h6>\r\n                <h6>\r\n                  {state.followers ? state.followers.length : \"0\"} followers\r\n                </h6>\r\n                <h6>\r\n                  {state.following ? state.following.length : \"0\"} following\r\n                </h6>\r\n              </div>\r\n            </div>\r\n            <div className=\"file-field input-field\">\r\n              <div className=\"btn #1976d2 blue darken-1\">\r\n                <span>Update Image</span>\r\n                <input\r\n                  type=\"file\"\r\n                  onChange={(e) => {\r\n                    // console.log(e.target.files[0])\r\n                    setImage(e.target.files[0]);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"gallery\">\r\n            {myPics.map((item) => {\r\n              return (\r\n                <img key={item._id} className=\"item\" alt=\"\" src={item.photo} />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\Files\\mern_instagram_clone\\client\\src\\component\\screen\\Signin.js",["86","87","88"],"import React, { useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {userContext} from '../../App'\r\nimport M from \"materialize-css\";\r\n\r\nconst SignIn = () => {\r\n  const {state, dispatch} = useContext(userContext)\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const postData = () => {\r\n    if (\r\n      !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n      .test(email)\r\n    ) {\r\n      M.toast({ html: \"Invalid Email\", classes: \"#b71c1c red darken-4\" });\r\n      return;\r\n    }\r\n    fetch(\"/signin\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data)\r\n        if (data.error) {\r\n          M.toast({ html: data.error, classes: \"#b71c1c red darken-4\" });\r\n        } else {\r\n\r\n          // assign jwt and user data to local storage\r\n          localStorage.setItem('jwt',data.token) \r\n          localStorage.setItem('user', JSON.stringify(data.user))\r\n\r\n          dispatch({type:\"USER\", payload:data.user})\r\n\r\n          M.toast({\r\n            html: \"Signed in successfully\",\r\n            classes: \"black-text #eeeeee grey lighten-3\",\r\n          });\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"myCard\">\r\n      <div className=\"card auth-card input-field\">\r\n        <h2>Instagram</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button\r\n          className=\"btn waves-effect waves-light #1976d2 blue darken-1\"\r\n          onClick={() => postData()}\r\n        >\r\n          Login\r\n        </button>\r\n        <h5>\r\n          <Link to=\"/signup\">Sign up if you don't have a account!</Link>\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","D:\\Files\\mern_instagram_clone\\client\\src\\component\\screen\\UserProfile.js",["89","90"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { userContext } from \"../../App\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Profile = () => {\r\n  const [userProfile, setProfile] = useState(null);\r\n  const [showFollow, setShowFollow] = useState(true);\r\n  const { state, dispatch } = useContext(userContext);\r\n  const { userid } = useParams(); //use url parameter\r\n  useEffect(() => {\r\n    fetch(`/user/${userid}`, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((results) => {\r\n        setProfile(results);\r\n      });\r\n  }, []);\r\n\r\n  const folloUser = () => {\r\n    fetch(\"/follow\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        followId: userid,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        dispatch({\r\n          type: \"UPDATE\",\r\n          payload: { following: result.following, followers: result.followers },\r\n        });\r\n        localStorage.setItem(\"user\", JSON.stringify(result));\r\n        setProfile((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            user: {\r\n              ...prevState.user,\r\n              followers: [...prevState.user.followers, result._id],\r\n            },\r\n          };\r\n        });\r\n        setShowFollow(false);\r\n      });\r\n  };\r\n  const unfollowUser = () => {\r\n    fetch(\"/unfollow\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        unfollowId: userid,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        dispatch({\r\n          type: \"UPDATE\",\r\n          payload: { following: result.following, followers: result.followers },\r\n        });\r\n        localStorage.setItem(\"user\", JSON.stringify(result));\r\n        setProfile((prevState) => {\r\n          const newFollower = prevState.user.followers.filter(\r\n            (item) => item !== result._id\r\n          );\r\n          return {\r\n            ...prevState,\r\n            user: {\r\n              ...prevState.user,\r\n              followers: newFollower,\r\n            },\r\n          };\r\n        });\r\n        setShowFollow(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {userProfile ? (\r\n        <div style={{ maxWidth: \"550px\", margin: \"0px auto\" }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-evenly\",\r\n              margin: \"18px 0px\",\r\n              borderBottom: \"1px solid grey\",\r\n            }}\r\n          >\r\n            <div>\r\n              <img\r\n                style={{\r\n                  width: \"160px\",\r\n                  height: \"160px\",\r\n                  borderRadius: \"80px\",\r\n                }}\r\n                alt=\"\"\r\n                src={userProfile.user.userProfilePic}\r\n\r\n              />\r\n            </div>\r\n            <div>\r\n              <h4>{userProfile.user.name}</h4>\r\n              <h5>{userProfile.user.email}</h5>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  width: \"108%\",\r\n                }}\r\n              >\r\n                <h6>{userProfile.posts.length} posts</h6>\r\n                <h6>\r\n                  {userProfile.user.followers\r\n                    ? userProfile.user.followers.length\r\n                    : \"0\"}{\" \"}\r\n                  followers\r\n                </h6>\r\n                <h6>\r\n                  {userProfile.user.following\r\n                    ? userProfile.user.following.length\r\n                    : \"0\"}{\" \"}\r\n                  following\r\n                </h6>\r\n              </div>\r\n              {console.log(userProfile)}\r\n              {showFollow && !userProfile.user.followers.includes(state._id) ? (\r\n                <button\r\n                  className=\"btn waves-effect waves-light #1976d2 blue darken-1\"\r\n                  onClick={() => folloUser()}\r\n                  style={{\r\n                    margin: \"10px\",\r\n                  }}\r\n                >\r\n                  follow\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  className=\"btn waves-effect waves-light #1976d2 red darken-1\"\r\n                  onClick={() => unfollowUser()}\r\n                  style={{\r\n                    margin: \"10px\",\r\n                  }}\r\n                >\r\n                  unfollow\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"gallery\">\r\n            {userProfile.posts.map((item) => {\r\n              return (\r\n                <img key={item._id} className=\"item\" alt=\"\" src={item.photo} />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h2\r\n          style={{\r\n            top: \"0\",\r\n          }}\r\n        ></h2>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\Files\\mern_instagram_clone\\client\\src\\component\\screen\\FollowPost.js",["91","92","93","94","95","96"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { userContext } from \"../../App\";\r\nimport {Link} from 'react-router-dom'\r\nimport { AutoInit } from \"materialize-css\";\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const { state, dispatch } = useContext(userContext);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/getfollowpost\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((results) => {\r\n        console.log(results);\r\n        setData(results.posts);\r\n      });\r\n  }, []);\r\n\r\n  const likePost = (id) => {\r\n    fetch(\"/like\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const unlikePost = (id) => {\r\n    fetch(\"/unlike\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const makeComment = (text, postId) => {\r\n    fetch(\"/comment\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId,\r\n        text,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      });\r\n  };\r\n\r\n  const deletePost = (postId) => {\r\n    fetch(`/deletepost/${postId}`, {\r\n      method: \"delete\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        const newData = data.filter((item) => {\r\n          return item._id !== result._id;\r\n        });\r\n        setData(newData);\r\n      });\r\n  };\r\n  const deleteComment = (commentId,postId) => {\r\n    fetch(`/deletecomment/${commentId}/${postId}`, {\r\n      method: \"delete\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {data.length !== 0 ? data.map((item) => {\r\n        return (\r\n          <div key={item._id} className=\"card home-card\">\r\n            <h5>\r\n              <Link to={item.postedBy._id !== state._id ? '/profile/' + item.postedBy._id : '/profile'} style={{padding:\"5px\"}}> {item.postedBy.name} </Link>\r\n              \r\n              {item.postedBy._id === state._id && (\r\n                <i\r\n                  key={item.postedBy._id}\r\n                  className=\"material-icons\"\r\n                  style={{ float: \"right\", cursor: \"pointer\" }}\r\n                  onClick={() => deletePost(item._id)}\r\n                >\r\n                  delete\r\n                </i>\r\n              )}\r\n            </h5>\r\n            <div className=\"card-image\">\r\n              <img alt=\"\" src={item.photo} />\r\n            </div>\r\n            <div className=\"card-content\">\r\n              {item.likes.includes(state._id) ? (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  onClick={() => {\r\n                    unlikePost(item._id);\r\n                  }}\r\n                  style={{\r\n                    color: item.likes.length > 0 ? \"red\" : \"grey\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  favorite\r\n                </i>\r\n              ) : (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  onClick={() => {\r\n                    likePost(item._id);\r\n                  }}\r\n                  style={{\r\n                    color: item.likes.length > 0 ? \"red\" : \"grey\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  favorite\r\n                </i>\r\n              )}\r\n\r\n              <span>{item.likes.length} Likes</span>\r\n              <h6>{item.title}</h6>\r\n              <p>{item.body}</p>\r\n              {item.comments.map((record) => {\r\n                return (\r\n                  <h6 key={record._id}>\r\n                    <span style={{ fontWeight: \"500\" }}>\r\n                      {record.postedBy.name}\r\n                    </span>\r\n                    {record.text}\r\n                    {record.postedBy._id === state._id && (\r\n                      <i\r\n                        key={record.postedBy._id}\r\n                        className=\"material-icons\"\r\n                        style={{ float: \"right\", cursor: \"pointer\" }}\r\n                        onClick={() => deleteComment(record._id,item._id)}\r\n                      >\r\n                        delete\r\n                      </i>\r\n                    )}\r\n                  </h6>\r\n                );\r\n              })}\r\n              <form\r\n                onSubmit={(e) => {\r\n                  e.preventDefault(); //prevent refreshing\r\n                  makeComment(e.target[0].value, item._id); //access first input element\r\n                }}\r\n              >\r\n                <input type=\"text\" placeholder=\"add a comment\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        );\r\n      }) : <h2 className=\"no-post\">You are following no user</h2>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\Files\\mern_instagram_clone\\client\\src\\reducers\\userReducer.js",["97","98"],"export const initialState = null\r\n\r\nexport const reducer = (state, action) => {\r\n    if(action.type === \"USER\"){\r\n        return action.payload\r\n    }\r\n    if(action.type === \"CLEAR\"){\r\n        return null\r\n    }\r\n    if(action.type == \"UPDATE\"){\r\n        return {\r\n            ...state,\r\n            followers:action.payload.followers,\r\n            following:action.payload.following,\r\n\r\n        }\r\n    }\r\n    if(action.type == \"UPDATE_PROFILE_PIC\"){\r\n        return{\r\n            ...state,\r\n            userProfilePic:action.payload.userProfilePic,\r\n        }\r\n    }\r\n    return state\r\n}","D:\\Files\\mern_instagram_clone\\client\\src\\component\\Search_button.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":20,"column":11,"nodeType":"105","messageId":"106","endLine":20,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":29,"column":6,"nodeType":"109","endLine":29,"endColumn":8,"suggestions":"110"},{"ruleId":"107","severity":1,"message":"111","line":45,"column":6,"nodeType":"109","endLine":45,"endColumn":11,"suggestions":"112"},{"ruleId":"103","severity":1,"message":"113","line":1,"column":29,"nodeType":"105","messageId":"106","endLine":1,"endColumn":35},{"ruleId":"103","severity":1,"message":"114","line":1,"column":37,"nodeType":"105","messageId":"106","endLine":1,"endColumn":46},{"ruleId":"103","severity":1,"message":"115","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":9},{"ruleId":"103","severity":1,"message":"116","line":5,"column":10,"nodeType":"105","messageId":"106","endLine":5,"endColumn":27},{"ruleId":"103","severity":1,"message":"117","line":10,"column":10,"nodeType":"105","messageId":"106","endLine":10,"endColumn":21},{"ruleId":"103","severity":1,"message":"118","line":10,"column":23,"nodeType":"105","messageId":"106","endLine":10,"endColumn":37},{"ruleId":"119","severity":1,"message":"120","line":19,"column":11,"nodeType":"121","endLine":19,"endColumn":28},{"ruleId":"122","severity":1,"message":"123","line":13,"column":23,"nodeType":"124","messageId":"125","endLine":13,"endColumn":24,"suggestions":"126"},{"ruleId":"122","severity":1,"message":"123","line":13,"column":48,"nodeType":"124","messageId":"125","endLine":13,"endColumn":49,"suggestions":"127"},{"ruleId":"103","severity":1,"message":"128","line":7,"column":18,"nodeType":"105","messageId":"106","endLine":7,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":36,"column":24,"nodeType":"131","messageId":"132","endLine":36,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":62,"column":24,"nodeType":"131","messageId":"132","endLine":62,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":91,"column":24,"nodeType":"131","messageId":"132","endLine":91,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":127,"column":24,"nodeType":"131","messageId":"132","endLine":127,"endColumn":26},{"ruleId":"107","severity":1,"message":"133","line":58,"column":6,"nodeType":"109","endLine":58,"endColumn":11,"suggestions":"134"},{"ruleId":"107","severity":1,"message":"135","line":62,"column":6,"nodeType":"109","endLine":62,"endColumn":13,"suggestions":"136"},{"ruleId":"103","severity":1,"message":"104","line":7,"column":10,"nodeType":"105","messageId":"106","endLine":7,"endColumn":15},{"ruleId":"122","severity":1,"message":"123","line":14,"column":18,"nodeType":"124","messageId":"125","endLine":14,"endColumn":19,"suggestions":"137"},{"ruleId":"122","severity":1,"message":"123","line":14,"column":43,"nodeType":"124","messageId":"125","endLine":14,"endColumn":44,"suggestions":"138"},{"ruleId":"107","severity":1,"message":"139","line":20,"column":6,"nodeType":"109","endLine":20,"endColumn":8,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":167,"column":9,"nodeType":"121","endLine":171,"endColumn":10},{"ruleId":"103","severity":1,"message":"143","line":4,"column":10,"nodeType":"105","messageId":"106","endLine":4,"endColumn":18},{"ruleId":"103","severity":1,"message":"128","line":8,"column":18,"nodeType":"105","messageId":"106","endLine":8,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":37,"column":24,"nodeType":"131","messageId":"132","endLine":37,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":63,"column":24,"nodeType":"131","messageId":"132","endLine":63,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":92,"column":24,"nodeType":"131","messageId":"132","endLine":92,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":128,"column":24,"nodeType":"131","messageId":"132","endLine":128,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":10,"column":20,"nodeType":"131","messageId":"132","endLine":10,"endColumn":22},{"ruleId":"129","severity":1,"message":"130","line":18,"column":20,"nodeType":"131","messageId":"132","endLine":18,"endColumn":22},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["146"],"React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["147"],"'useRef' is defined but never used.","'useEffect' is defined but never used.","'M' is defined but never used.","'JsonWebTokenError' is defined but never used.","'userDetails' is assigned a value but never used.","'setUserDetails' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Search_button must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["148","149"],["150","151"],"'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["152"],"React Hook useEffect has a missing dependency: 'uploadProfilePic'. Either include it or remove the dependency array.",["153"],["154","155"],["156","157"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["158"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'AutoInit' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"messageId":"163","fix":"164","desc":"165"},{"messageId":"166","fix":"167","desc":"168"},{"messageId":"163","fix":"169","desc":"165"},{"messageId":"166","fix":"170","desc":"168"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"messageId":"163","fix":"175","desc":"165"},{"messageId":"166","fix":"176","desc":"168"},{"messageId":"163","fix":"177","desc":"165"},{"messageId":"166","fix":"178","desc":"168"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [dispatch, history]",{"range":"181","text":"182"},"Update the dependencies array to be: [body, history, title, url]",{"range":"183","text":"184"},"removeEscape",{"range":"185","text":"186"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"187","text":"188"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"189","text":"186"},{"range":"190","text":"188"},"Update the dependencies array to be: [dispatch, state, url]",{"range":"191","text":"192"},"Update the dependencies array to be: [image, uploadProfilePic]",{"range":"193","text":"194"},{"range":"195","text":"186"},{"range":"196","text":"188"},{"range":"197","text":"186"},{"range":"198","text":"188"},"Update the dependencies array to be: [userid]",{"range":"199","text":"200"},[1128,1130],"[dispatch, history]",[1275,1280],"[body, history, title, url]",[375,376],"",[375,375],"\\",[400,401],[400,400],[1697,1702],"[dispatch, state, url]",[1793,1800],"[image, uploadProfilePic]",[442,443],[442,442],[467,468],[467,467],[662,664],"[userid]"]